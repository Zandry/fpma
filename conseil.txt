 - Define the goal of the project (selling, giving tutorial, selling services)
    - define the audience (users, public, kids)

2   - plan your contents carefully (content first approach)
    - define the navigation
    - define the site structure (sitemap)
    
3   - sketch ideas before designing (pencils and papers)
    
4   - start design and develop your site (html/css) --> design in the browser

5   - Optimize for performance and SEO

6   - launch the site (web server)

7   - site maintenance 



PREPARATION DE LA STRUCTURE DU SITE:
Folder  --> resources (css/img/js)
        --> vendors (css/img/js)
        
        
Create the HTML structure (html de base et lien avec le CSS)


RESPONSIVE WEB DESIGN (3 ingredients)
- fluid grid (all layout elements are sized in relative units like % instead of absolute units like px)
- flexible images (sized in %)
- media queries (size different according to width)

Consiel: BIG HEADLINES OR TITLE then DECREASE FONT -WEIGHT

PROBLEME aprèce cette étape: les texte des titres h3 ne tiennent plus sur une ligne

SECTION 3: Nous allons travailler sur comment on fait des commandes de repas sur notre site

Pour cela, nous allons rajouter une section(class section (class section-steps) avec un titre (comme la section 1, nous utiliserons la class row pour le titre)
Pour le contenu, récupérer le fichier d'aanalyse(cahier de charge)

Exercice: créer le squelette de code de la nouvelle section avec les bonnes classes et le texte
idée: s'inspirer de la section2)

Exercice 2:
-copier l'image bible.jpg dans les ressources et ajouter le dans la première colonne du squelette html pour cet image, l'alternative sera (autre bible) et la class est"bible-open"

-Dans la deuxième colonne rajouter 3 container avec les classes "fiofanana-step". Dans le <div> fiofanana-step, rajouter un autre div qui contiedra le des instructions pour l'utilisation du lien (pas de classe) et juste après rajouter un paragraphe avec le text
(Résultat pas encore joli)

EXERCICE 3: Formatter la section "formation SAP"
- mettre un espacement entre le titre de la section et son contenu (ex: utiliser margin)
    +aligner l'image à droite de sa boite et rajouter un espacement droit en pourcentage et le mettre à gauche de sa boite et un espacement gauche.
    
- redimensionner l'image en pourcentage (fournir la bonne taille) (utiliser la class bibleonly)

- Formattage des étapes :
    + transformer les numéro d'étapes en petit cercle vert et non pas en numéro (pour faire une cercle, on utilisera border et border-radius)
    + espacer de quelques pixels (en pourcentage) les bullets/puces et leurs textes
    
- aligner les boutons applications avec le fond de l'image du téléphone (j'ai juste marqué, mais cet étape ne concerne pas mon site)

- un problème d'espacement devrait apparaitre entre la nouvelle section et celle d'avant. Il faut utiliser clearfix pour le résoudre (clear the floats à chaque fois qu'on utilise un float, il faut utiliser clearfix

Section 4: Travail à faire:
- creer une nouvelle section avec une classe section-responsable.Cette section a un titre donc il faudra rajouter un div avec une class row.
- remplir le contenu avec le fichier d'analyse
- sous le titre, nous voudrions avoir une ligne avec 4 colonnes. Chaque colonne contiendra une photo avec des détails en dessous. (voir la maquette)
- le texte de description contient un format comme ci-dessous
Pasteur
Joelitiana Rarivomanana
rarivomanana.joelitiana@neuf.fr
- utiliser des icônes (fontawesone comme dans la section 1) pour mettre une icône devant le lien mail

- un problème est apparu en formattant les liens de notre site. Le bouton lien a été souligné en jaune aussi (voir l'image dans le dépot de git)
il faudra corriger

Section5: c'est une sorte de forum.mais dans mon site, c'est le verser du mois que nous formattons pour afficher
Travail à faire:
- créer le squelette de la section avec les éléments nécéssaires (s'inspirer de la maquette et du fichier d'analyse)
question à poser: A-t-on un titre? De combien de colonnes a-t-on besoin?

- Remplir le sqelette des informations fournie dans le fichier d'analyse

- créer une image de fond pour la section verser du mois
( inspiration: on a déjà fait le même chose pour l'image de fond du header)

- formatter les balises bloquotes et cite (espacement, texte en italique, line-height,...)

- formatter les images dans les balises cite, pour apparaitre dans un petet cercle comme le montre la maquette

- bien aligner l'image avec le nom

- rajouter des guillemets pour encadrer les textes des quotes des versers à partir du  CSS pour qu'on puisse le formatter (inspiration utiliser .bloquote: before fin de mettre le guillemet ouvrant devant le texte du bloquote) 

SECTION 6: on va apprendre à créer des boites avec css. On va également apprendre à faire des ombres
TRAVAIL A FAIRE:
- créer le squelette de la sectionavec les éléments (ce qui est dans le fichier d'analyse)
question à se poser: A-t-on un titre? De combien de colonnes a-t- on besoin? est ce qu'on doit remplir  toute la ligne ou doit-on utiliser un autre layout?
+ on a titre
+ on a selon la maquette trois colonnes
+ on a 2 sections ( pas comme dans la maquette) ( on va pour le moment mettre à des div)
  ==> section petit titre, section nom du membre et son adresse mail
  
  
- remplir le squelette à partir déléments du fichier d'analyse

- dupliquer ce premier squelette trois fois pour avoir les trois colonnes

################################################################################
Travail à faire (suite) 
- FORMATTAGE SECTION SECRETAIRE
- mettre une couleur de fond pour la section (un gris comme celle de la section "FORMATION SAP"
- formatter les div plan-box (boites) pour que le fond soit blanc et les coins des boites soient arrondis (utiliser border-radius), formatter la largeur des boites pour occuper 90% de la largeur allouée
- formatter les div dans chaque plan-box pour former une section claire (commencer par experimenter en mettant un espacement entre les div, ça pourrait être un border-bottom avec une bordure solid à 1px et avec une couleur par exemple)
- formatter la section nom pour que la taille de police soit gros. Colorier la partie nom en bleu
- Formatter la liste ul pour ne pas avoir des puces 
- rajouter des espacements entre les éléments de la liste si nécéssaires ( padding entre les li)

- définir les icônes comme étant des icones petit (on a déjà une classe .icon-small définit pour la section responsable)
- centrer les bouttons dans chaque boite (indice: les boutons peuvent être défini comme étant le dernier fils du div dan sla classe plan-box)

après toutes ces formattages, on a un problème d'alignements car on a une section vide
- pour remplir le vide, on va modifier le Html

- griser un peu le fond la première section des boites (indice: c'est le premier fils du div dans la class plan-box). Améliorer ensuite les arrondis aux bord haut gauche et droit à 5px s'ils ne sont pas déjà là (indice: border-top-left-radius et border-top-right-radius)

- rajouter ensuite un effet d'ombrage dans les bpites plan-box (indice: box-shadow)



#######################################################################################################
Contact form -travail à faire
########################################################################################################
- créer le squelette de html pour faire un formulaire (on a un titre)
- créer un div row entier et une form sans action et dans lequel on a un autre div row entier.
- Dans chaque row dans le form, diviser l'espace disponible en trois colonnes:
 + la première colonne aura le label
 + la deuxième colonne aura le controle (textbox ou radiobouton, ...etc)
 + on laissera vide la troisième colonne pour l'instant (ne pas créer)
 (créer autant de row que de fields qu'on doit créer selon le fichier d'analyse)
 
 - Modifier la largeur de la section contact-form à 60%
 - Centrer la section en mettant une marge haut et bas à 0 et gauche et droit à auto; ( voir la doc de margin http://developer.mozilla.org/fr/docs/web/css/margin - chercher la syntaxe où on a deux paramètres à margin)
 - formatter tous les éléments d'interface graphique pour occuper 100% de leur largeur ( ces éléments sont tous les éléments de droite)
 - mettre un peu de padding à 7px;
 - arrondissez les ordures des controles
 - modifiez les bordures des contrôles  modifiés pour avoir une épaisseur égale autour de ces controles et coloriez le en gris
 - mettez la hauteur du textarea à 100%
 - mettre le bouton en forme pour qu'il ressemle aux autres bouton arrondis
 - enlever les couleurs bleus autour des controles quand on les selectionne (indice css focus <=> c'est comme border)

 #######################################################################################################
 Footer - travail à faire
 #######################################################################################################
 Notre footer contiendra une partie de navigation (un menu) et une partie où mettra les icônes sociales.
 Les éléments de navigation sont dans le fichier d'analyse
 
 - créer le squelette de code html (deux colonnes 50/50)
    +  première ligne: pas de titre mais une ligne entière navigation et icône sociales
    + deuxième ligne: texte
- dans la première ligne et première colonne, rajouter une liste <ul><li>...dans lesquelles vous rajouterez les éléments du fichier d'analyse
- dans la première ligne et deuxième colonne, rajouter une liste <ul><li>... dans lesquelles on rajoute les icônes de fb, youtube, 'mail'
- dans la deuxième ligne, rajouter le texte "copyright 2019, by fpma Cergy. 

FORMATTAGE
- mettre une couleur de fond sombre pour le footer entier (ex: #333333)
- mettre le contenu du footer en float left et les styles de list à none pour supprimer les styles
- mettre le contenu du footer nav en affichage horizontal (indice display)
- faire la même chose avec les social icons (float right et style de list à none)
- afficher les social-icons en ligne ( indice inline) et rajouter une marge de 20px à droite de chaque élément d'icône
- supprimer la marge du dernier élément des social icons
- formatter les liens pour les menus et les social icons (car les liens deviennent gris quand on les a visités)
    + suppression les décorations de texte (pour ne pas avoir les soulignements)
    + mettre les bordures à 0
    + mettre les couleurs des liens à leur couleurs visité(#888) (à voir le résultat)
- formatter les liens hover et active avec une couleur #ddd pour le menu (pour les icônes, one fera plus tard)
- mettre le contenu du paragraph copyright à la même couleur que les liens et réduire sa taille de fond (donner la taille en pourcent pour la responsivité). Ensuite centrerle texte.
- rajouter un padding de 40px au footer
- rajouter un margin-top de 30px pour séparer les menus et le paragraph
- agrandir les fonts des socials links à 160%
- mettre les icônes aux couleurs originaux des réseaux à chaque fois que la souris passe dessus (pour avoir les couleurs originaux, aller sur https://www.materialui.com/socialcolors) "mon cas à vérifier car j'utise fontawesone)
- rajouter une transition pour le changement de ces couleurs, de 0,2s
- finalement, réduire tout le texte du footer à 80%

######################################################################################################
Make the site responsive - travail à faire
######################################################################################################
- trouver les breakpoints (un breakpoint est une taille ou un résolution à partir duquel le site ne     s'affiche plus bien)
  cela se fait en ouvrant le site dans un navigateur et réduire la taille petit à petit et trouver la taille du navigateur qui ne fait plus correctement le rendu.==>voir fichier d'analyse pour les breakpoints standards
  Dans ce travail, nous allons utiliser les breakpoints standards.
- mettre la ligne de code <meta> html qui permet d'utiliser les medias queries

- créer un nouveau fichier CSS pour les media-queries, dans le répertoire CSS
 + rajouter les medias queries selon les tailles d'écran standards dans le doc et lier le nouveau CSS à la page
 
- ouvrir la page à partir de chrome (ou firefox mais chrome est mieux) sans passer par brackets
- ouvrer l'inspecteur d'objet afin que chrome affiche (en haut à droite) la résolution quand on réduit la taille du navigateur
    + Header 1: réduite la taille du navigateur jusqu'à ce que le texte dans le header ne rentre plus dans l'en-tête (normalement, à partir d'une largeur de 1148px, le texte est collé/ou dépasse sur le bord gauche du navigateur)
    
    + Pour corriger cela, prendre le code css qui permet de dimensionner le texte (en inspectant, on arrive à voir que la classe est hero-text-box)
        * modifier la largeur et mettez le à 100%
        * mettez un padding vertical horizontal à 0 et 2% respectivement
        * alignez également le logo car il est collé au bord gauche de la fenetre
        
- (mediaquery 1023px) Ouvrez la page dans chrome et réduisez la largeur à 768px. On se rend compte que le fonts sont partout un peu gros maintenant. On peut également trouver d'autres problèmes à résoudre.
    + fixer le font-size partout à 18px;
    + modifier le padding de chaque section (celui qui se trouve entre 2 sections) à 60px 0px

- Une fois qu'on a fait tout cela, on se rend compte que le texte en dessous de Get Food Fast a beaucoup d'espace à gauche et à droite. la classe qu'on a donné à ce texte est section1-paragraph1.

    + modifier la classe pour occuper 80% de la largeur et une marge de 10% de chaque côté gauche et droite
      * agrandir un peu la taille de l'image de l'Iphone car il est trop petit à ce stade (voir la    
        taille adequate) <=> rappel, la classe de l'Iphone est app-screen 
      * mettre une marge top à step-box = 10px;
      * à l'élement de texte (step-box:last-child), rajouter un margin-top de 60px pour aligner les deux colonnes
      * à works-step, mettez un margin-bottom de 40px au lieu de 80px pour réduire l'espacement;
      * à works-step:last-of-type, mettez un margin-bottom de 0px au lieu de 80px pour réduire l'espacement;
      
formation sap(OUBLI)
- LES BOUTONS vont à la ligne
- correction (réduire les margin-right des boutons(sauf que je n'ai pas les boutons sur mon site.Mais je fais le remarque sur mon fichier conseil) 10pxpar 5px pour gagner un peu d'espace). La classe des boutons est "btn-app
      
LES RESPONSABLES(1024px)
- les icônes de la section sont trop larges et plein d'espace blanc à partir de 1024px;
  (la classe des icônes est icon-small)
- Modifier également la taille des textes de responsableà 17px pour que le texte soit bien justifier.

SECTION MEMBRE (1024px)
- les boites sont moins large maintenant et l'affichage de leur contenu part à la ligne. Cela fait en           sorte que les boites n'ont plus les mêmes hauteurs.
   Problème:
   + il y a beaucoup d'espace blanc dans les boites.
     Solution:
     * Modifier la largeur des boites de 90% à 100% et margin-left à 0 (pour gagner les espaces blancs)
     Cette solution résoud notre problème jusqu'à une résolution de (820 et quelques pixels) seulement.
     Pour résoudre ce problème jusqu'à notre breakpoint (767px), on doit encore gagner de l'espace pour que les boites s'alignent.
       * on va déjà mettre la taille de titre à 275% de sa taille pour ne pas aller à la ligne
       
FOOTER (1024px)
    - problème : le menu va à la ligne
    - solution : augmenter la largeur de la classe "footer-nav" à 130% et la taille de police à 95%
       
CONTACT FORM(1024px)
- il y a trop d'espace blanc sur les bord de la section form et le formulaire est recroquillé au centre. Il faut agrandir la largeur de la section form (class contact-form ==>passer de 60% à 80%)

480px:
- voir l'image fournit dan sle commit d'avant pour voir les effets de la réduction de la largeur à 480px
- il nous faut déjà cacher tout ce qui dépasse dans toute la page (et dans toutes les résolution)

PAGE EN GENERAL (767px)
- réduire la taille des polices dans les html,body de 20px à 60px
- on se rend compte également qu'il y a trop d'espace blanc entre les sections.
- réduire le padding entre section de 60px vertical à 30px vertical (voir le code de section)

Par la suite, nous allons mettre tous les éléments du site empilé (l'un en dessus des autres)
(en particulier les colonnes seront empilés et non plus côte à côte)
Pour cela, commencer par donner un peu d'espace sur les côtés des éléments comme suit:
- traiter également le padding des classes row. Mettre le padding à 0 40% au lieu de 0 2%
- ensuite rajouter une classe col dans notre media query avec une largeur de 100% (attention: col n'est pas définit dans notre fichier style.css mais dans grid.css)
- modifier la taille de tous les balises h1 à 180% et h2 à 150% de leur taille actuelle

HEADER (767px)
- faire disparaitre le menu (pour le moment). Plus tard, nous allons utiliser JQuery pour afficher le menu sous formz d'icône.

FEATURES (767px)
- réduire les marges de la classe "section1-paragraph1" afin d'afficher tout ce texte sur 100% de la largeur
- mettre les icônes et le titre des features au centre

##########################################################################"
FORMATION SAP(767px)
- centrer l'image de la bible (la classe utilisé est .step-box:first-child) est fixer sa largeur à 40%.
(rappel la classe de la bible est "bible-open")
- Il faudra centrer les boutons app-btn(je n'ai pas ces boutons sur mon site.Mais je le mets dans le doc  quand même).Pour cela, il faudra:
 + centrer le contenu de la classe step-box:last-child (cela permettra de centrer les boutons sinon impossible de centrer des éléments inline)
 + aligner à gauche le contenu de step-form ( pour que les textes restent à gauches)
 + pour garder l'alignement du texte avec les cercles, mettez font-size à 125% dans form-step et réduire un peu la taille des cercles (mettre à '40px) ne pas oublier de changer le font-size des chiffres
- réduire la marge inséré en dessus des steps (la classe est .step-box:last-child)

#############################################"
SECTION-MEMBRE DU BUREAU(767px)
- les boites présentent un problème: ils ne commencent pas à la même colonne
Cela est causé par le fait que dans la section précédente, on modifie un classe qui est dan s grid.css
C'est la classe "col". Solution: rapporter les définitions des marges pour la classe "col" à partir de grid.css dans notre fichier queries.css ( voir capture d'ecran ==> problème_767_membrebureau.png)
    + Cela nous permettra également de rajouter un petit espace entre les boites égalements
    + Ensuite, il serait bien de réduire la largeur des boites car il y a trop d'espace blanc dans les boites. ==> afficher les boites "plan-box" sur 60% de la largeurafin d'eviter d'avoir 100% de la largeur et d'avoir plein d'espace blanc
- centrer les plan-box afin d'avoir moins d'espace lanc pour les téléphones et tablettes

###################################
SUPPORT DE TOUS LES NAVIGATEURS
###################################
Pour s'assurer que notre site est bien affiché par tous les navigateurs, il nous faudra :
- mettre à jour notre css avec les prefixes vendeurs
    + installer le plugin autoprefixer dans brackets
    + selectionner toutes les lignes de css
    + modifier > autoprefix la selection
- utiliser respond.js pour supporter les media queries sur les vieux navigateurs (à récupérer sur internet - par ex: jdelivr.com)
- utiliser html5shiv pour forcer les vieux navigateurs à supporter les instructions html5shiv (à pomper sur jdelivr.com)
- utiliser selectivizr pour émuler et forcer la reconnaissance des pseudo-classes css3 dans les vieux navigateurs

Remarque: pour savoir si un navigateur supporte vos instructions css, utiliser caniuse.com

##################################################
TUTORIAL JQUERY
####################################################
$('h1') <=> selectionne tous les tags h1 du html
$('h1').click() <==> est un evenement appelé quand on a cliqué sur un tag h1 selectionné et click() peut prendre une fonction à l'intérieur (voir l'exemple script.js)

##########################################################
STICKY NAVIGATION JQUERY
######################################################
Ce qu'on veut c'est d'afficher le menu dans l'en-tête sur toutes les sections mais pas seulement quand on est sur le header.
Ce qui va se passer c'est que le menu va apparaître en haut quand on scroll en début de section.
Attention: notre menu est transparent.

Pour cela:
- rajouter la classe "sticky" à la balise nav dans le html (juste pour tester car nous allons enlever plus tard et le rajouter dynamiquement avec JQuery)

- dans style.css, rajouter la définition de la classe sticky. Elle devra:
    + mettre position à "fixed" car cela permet de fixer l'élément à un endroit sans que ça suive le scroll
    + positionner l'élément en haut et à gauche
    + forcer l'élément à occuper toute la largeur de la page (indice "width")
    + définir la coueleur de fond du menu à blanc
    + définir un petit effet de transparence (à 90%)
- tester la page (on devrait avoir une bande blanche avec le menu en dessus mais presque invisible)

Pour résooudre le problème de visibilité du menu. On veut que le style du menu s'applique seul
- recopier .main-nav li a: link et .main-nav li a: visited et coller-le sous sticky. Modifier le ppour modifier la navigation si le main-nav est à l'intérieur de la classe stocky (solution: créer un style .sticky .main-nav li ....)
    + supprimer les webkit
    + modifier la couleur du texte à #555 (pour tester - trouver ce qui convient)
    
- le logo est en blanc (modifier-le en noir - utiliser l'autre fichier de logo). Pour cela:
    + allez dans le html et incluez le logo noir au même endroit
    + créer un css qui met en forme ce logo noir comme le vrai logo
    Par la suite, nous allons faire en sorte de n'afficher qu'un seul logo ==> renomez la deuxième classe logo en logo-black
    N'affiche pas le logo dans un cas où la classe sticky est définit (display:none)
- définir maintenant une instruction css qui affiche logo-black en block (display:block) s'il est dans la classe sticky (.sticky .logo-black...)
- réduire l'espace en dessus du menu et du logo noir. Pour cela, récupérer le code css de main-nav et faire un equivalent "sticky", et modifier le margin-top à 15px pour que le menu soit bien en haut
- réduire aussi la taille du logo-noir "dans mon site,c'est mon logo original que j'ai modifier et mettre dans le sticky" (récupérer le code de logo et en faire un equivalent sticky) à 50px de hauteur et changer la marge en haut à 5px

##################FORMATTAGE ouveau menu###########
- modification padding pour rapprocher le soulignement orange de la bordure
- rajouter un ombre autour du menu sticky pour afficher une bordure d'ombre (utiliser box-shadow)

- ajustement: modifier la classe "logo-black" pour un margin: 5px 0;
- modification de la largeur de la ligne souligné pour les menus hover (changer la largeur à 2px ==>voir résultat)

##############################################"
REDIRECTION DES NAVIGATIONS ET SCROLLING
###########################################
Dans cette section, nous allons définir ce que font les boutons et les éléments du menu

- rediriger le bouton "Ecouter en direct" vers la section "section-plans". C'est-à-dire que quand on clique sur le bouton, la page va scroller vers cette section
- rediriger le bouton "Annonce" vers la section "section-features"
Pour cela:
1- rajouter la classe "js-scroll-to-plan" dans le div du bouton (avec la classe "btn" et "btn-full")
2- rajouter la classe "js-scroll-to-start" pour la classe "btn" et "btn-ghost"
3- ensuite nous allons d'abord tester que le js fonctionne en affichant une alerte message
4- maintenant que le code js a été testé et fonctionne, nous allons définir la classe destination et donc  
nous allons rajouter "js-section-plans" dans la section "section-plans". Et ensuite,nous allons coder que la page ira vers cette section quand on clique sur le bouton/lien "js-scroll-to-plans" (pour cela, voir la doc Jquery sur animate et scrolltop)

- faire la même chose pour le bouton ghost mais redirigez-le vers js--section-features

- la prochaine section consiste à faire la redirection des menus:
Conseil: utilisez beaucoup de code que les autres ont écrits (pas besoin de toujours tout réinventer)
Pour trouver des codes, on peut essayer css-tricks.com par exemple (ou beaucoup d'autres )
Pour ce qu'on souhaite faire, nous allons chercher ici
https://css-tricks.com/snippets/jquery/smooth-scrolling/ (copier coller le code qui est dans la section JQuery)

-créer des liens d'ancrage (anchor links) entre les menus et les sections qu'on doit atteindre en les cliquant. L'objectif est de lier:
    + accueil <==> section bible texte
       on va pour cela modifier le code  html comme suit:
       <li><a href="#features" >Food delivery </a></li> (j'ai suivi juste le doc de Pa omnifood) dans mon cas c'est sur que c'est autre chise
       <section class="section-features js--section-features" id="features">
    + reveil <==> section bible
    + contact <==> section responsable
    + section <==> section meals(eo @ sarin le sampana rehetra)
    
##############################################
ANIMATION DES BOITES ET DESSINS DE LA PAGE
################################################
- Nous souhaiterions créer des animations des divers éléments dusite (par exemple, des images qui apparaissent ou des photos des sections  qui diaparaissent, des boites des membres
Pour cela, nous allons utiliser le plugin animate.css (voir le site  https://daneden.github.io/animate.css/ pour les exemples d'animation). Dans notre cas, nous allons prendre ces animations et nous allons utiliser jquery pour activer les animations en manipulant les css
Premier travail: ANIMER LA SECTION FEATURES
Dans la section features ("LA Bible(pour mon site)"), nous allons animer les 4 boites. Pour cela, nous allons d'abord utiliser waypoint (on l'a vu dans le sticky menu) pour définir la position des boites
- tester manuellement l'animation en utilisant animate.css (telecharger animate.css ou animate.min.css à partir du site)
    + rajouter ce css dans vendor et dans le fichier html
    + rajouter une classe d'animation dans la classe qu'on souhaite animer (pour notre cas, les boites de la section feature). Pour faire une animation voir le doc ici (https://github.com/daneden/animate.css). Il faut rajouter à la classe qu'on souhaite animer la class 'animated', suivi du nom de l'animation et enfin le temps de l'animation (optionel) et le délai entre 2 animations (optionel)
    Nous allons utiliser l'animation bouce pour notre boite et infinite pour que ça ne s'arrete jamais

- Pour le site, nous allons utiliser la classe d'animation fadeIn
    + tester cette classe sur le site de animate
    + cette classe permet à notre boite d'apparaître du néant. Pour que la boite puisse "apparaitre", il faut qu'elle soit invisible au départ. Et ensuite, nous allons activer son apparition avec JQuery
- faire disparaitre les 4 boites features en utilisant css.
    + rajouter dans la classe row des boites (qui a été animé dans le test), une classe javascript "js---wp-featurebox".utiliser cette classe pour faire disparaitre toute la ligne ( le row entier) avec css3
    + pour faire disparaitre la boite et le faire apparaitre par animate, on peut tout simplement, mettre son opacité à 0 et quand il contiendra la classe animated, on met l-opacité à 1
    
    + rajouter le code javascript qui utilise waypoint pour selectionner le scroll. A chaque moment où on scrolle sur la section, les boites vont apparaitre ( et pour faire apparaitre les boites , rajouter les classes "animated" et "fadeIn" à la classe "js--wp-featurebox")
    $('.js--wp-featurebox').waypoint(
        function(direction{
            //code à mettre
        });
    + tester déjà que ce code fonctionne en mettant juste une alerte (cela nous permettra de nous assurer que le code waypoint fonctionne)
    
    + maintenat qu'on sait que le code waypoint fonctionne, on va rajouter la classe animated et fadeIn à la section

    - petit problème: l'apparition se fait quand on est  la moitié des boites (et qu'on ne voit plus les icônes)==> Correction: utiliser un offset pour que l'apparition se declenche à un offset plus petit. Pour ma part j'ai essayé 50%
EXERCICE : On peut également vérifier la direction et faire disparaitre les boites quand la section est cachée

- Exercice: Animer de même pour l'image de la bible(dans la section formation sap). Nous allons utiliser l'animation fadeINUp
    + définir une classe js--<nom de la section>
    + mettre l'opacite 0 avant l'animation
    + coder le javascript correspondant qui active l'animation
    
- Exercice: faire une animation FadeIn pour les images des responsable dans la section "section-responsable"
    + définir la classe js dans l'élément où on a les photos (moi je l'ai appelé js--responsable-images)
    + activer l'animation

- Exercice animer la première boite plan-box (la boite membre du bureau) par une animation pulse
  (pas besoin que la oite ait une opacité de 0 avant)
  
- Avant de continuer, on va refactoriser le code car on voit qu'il y a des codes qui se rèpètent dans le css

- Un dernier travail sur l'animation est de modifier la rapidité de l'animation car certaines animations sont trop lentes (en particulier l'image de la bible dans la "section formation SAP" qui monte). Pour cela, nous allons utiliser de css pure (animation-duration:1s pou que ça dure sur 1 seconde). il ne faut pas oublier la classe d'animation de plan-box qui n'est pas dans le css, il faut le rajouter.
- Enfin, n'oubliez pas d'appliquer les vendor prefix (comme on l'a déjà fait) pour la prise en compte de plusieurs navigateurs.

#####################################################
NAVIGATION RESPONSIVE
########################################################
Notre navigation n'est pas entièrement responsive. Quand on réduit le navigateur, elle disparait mais n'est plus utilisable
Des astuces d'écran du menu fini est commité. et c'est ce que nous allons faire maintenant. Pour cela:
- créer une balise a avec une classe "mobile-nav-icon" juste en dessous de la balise ul menu dans html. Dans cette balise a, nous allons mettre l'icone du menu réduit (le bouton avec des petites barres horizontale ==> ion-navicon-round dans ionicons et l'icone "align-justify" dans font-awesome par ex)
- mise en forme de l'icône mobile nav:
    + le faire flotter sur la droite (float:right)
    + rajouter une petite margin-top de 30px pour aligner avec le menu actuelle
    + comme la balise n'a pas de href, le pointeur ne change pas quand elle est en hover. Pour avoir un pointeur de souris correcte, il faut specifier la propriété cursor
- on voit que le bouton est visible alors que le menu est visible.
  Exercice: le rendre invisible
- quelqueq mise en forme du bouton est nécéssaire:
    + la taille de police de l'icône doit être de 200%
    + la couleur blanche
    ==> pour tester si ça fonctionne, affichez temporairement l'icône et quand c'est fini, re-cachez le.
########################################################
MEDIA QUERIES  pour le menu
###########################################################""
- on sait que le menu disparait à partir de 767px. On ne veut plus que le menu disparaisse. Il faut donc enlever le code css qui fait disparaître ce menu. Et en plus il faut le code css qui fait apparaître le boton mobile nav
- nous voudrions qua,d même que le bouton s'affiche à droite du menu et que le menu flotte à gauche du bouton (Exercice: faire le code correspondant à cette fonctionnalité)
